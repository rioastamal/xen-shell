.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "XEN-SHELL 1"
.TH XEN-SHELL 1 "2007-03-01" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
xen\-shell \- Provide a console interface to control Xen guests.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  xen\-shell [options]
.Ve
.PP
.Vb 1
\&  Options:
.Ve
.PP
.Vb 4
\&   \-\-control=   Specify which instance to control by default.
\&   \-\-help       Show brief help intstructions.
\&   \-\-manual     Show more complete help.
\&   \-\-version    Show the version of the software.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 2
\&  xen\-shell provides a simple console interface to allow a user to
\& control a Xen instances which are running upon the local system.
.Ve
.PP
.Vb 1
\&  The shell features include:
.Ve
.IP "Command line completion" 8
.IX Item "Command line completion"
.PD 0
.IP "Command history" 8
.IX Item "Command history"
.ie n .IP "The ability to run within \s-1GNU\s0 Screen to allow long-running jobs to be completed ""offline""." 8
.el .IP "The ability to run within \s-1GNU\s0 Screen to allow long-running jobs to be completed ``offline''." 8
.IX Item "The ability to run within GNU Screen to allow long-running jobs to be completed offline."
.PD
.SH "XEN SETUP"
.IX Header "XEN SETUP"
.Vb 2
\&  There are two ways to setup a Xen guest which might be controlled by
\& the local user "bob".
.Ve
.PP
.Vb 4
\&  The simplest method is to give a Xen instance the name "bob", (i.e.
\& a Xen domU which has the same name as the login account of the user
\& who is allowed to control it.), this has the downside that a local
\& user may only control a single instance.
.Ve
.PP
.Vb 2
\&  The second solution is to add a line such as the following to the
\& relevant Xen guest configuration file beneath /etc/xen:
.Ve
.PP
.Vb 1
\&  xen_shell = 'bob, steve, chris'
.Ve
.PP
.Vb 3
\&  This line, which will be ignored by Xen itself, will allow the Xen
\& shell to be used by the three local users "bob", "steve", and "chris" \-
\& and each of them will be able to work with that host.
.Ve
.PP
.Vb 3
\&  If a user is allowed to control more than one Xen guest upon the
\& current host then the two commands "control" and "list" will be made
\& available to them.
.Ve
.SH "REIMAGING SUPPORT"
.IX Header "REIMAGING SUPPORT"
.Vb 2
\&  The shell has a built\-in "reimage" command which can be used by users
\& to reinitialize their system.
.Ve
.PP
.Vb 4
\&  The reimage command itself does nothing, it merely executes the file
\& "image.sh" from the users home directory, it is assumed that you will
\& write your own script \- perhaps to invoke "xen\-create\-image" to do
\& the real job.
.Ve
.PP
.Vb 1
\&  A sample script, ~skx/image.sh, might look like this:
.Ve
.PP
.Vb 4
\&   #!/bin/sh
\&   #
\&   # Reimaging script for the user skx.
\&   #
.Ve
.PP
.Vb 2
\&   xen\-create\-image \-\-hostname=skx.xen\-hosting.net \-\-ip=1.2.3.4 \e
\&      \-\-size=9.5Gb \-\-swap=512Mb \-\-memory=256Mb \-\-force
.Ve
.PP
.Vb 2
\&  If ~$USER/image.sh doesn't exist, or isn't executable, this command
\& will be disabled.
.Ve
.Sh "\s-1REVERSE\s0 \s-1DNS\s0 \s-1SUPPORT\s0"
.IX Subsection "REVERSE DNS SUPPORT"
.Vb 4
\&  This shell contains a built\-in system for allowing a Xen\-shell user to
\& manipulate reverse DNS entries for IP addresses.  The shell itself doesn't
\& do this directly, instead the shell will manipulate a simple text file
\& in a users home directory.
.Ve
.PP
.Vb 1
\&  Create the file /home/$USER/ips.txt with contents of the following form:
.Ve
.PP
.Vb 3
\&   192.168.1.1 foo.my.flat
\&   192.168.1.2 bar.my.flat
\&   192.168.1.3 baz.my.flat
.Ve
.PP
.Vb 3
\&  If this file is present then the "rdns" command will be available to
\& that user.  The "rdns" command, when executed with no arguments will
\& simply display this file.
.Ve
.PP
.Vb 1
\&  When the user attempts to set reverse DNS this file will be updated.
.Ve
.PP
.Vb 3
\&  It is assumed you will have your own cronjob to actually read these
\& files and perform the DNS updates, the shell support is just half the
\& implementation.
.Ve
.PP
.Vb 2
\&  If the file doesn't exist, or isn't writable, then the command will
\& be disabled.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 3
\& Steve
\& \-\-
\& http://www.steve.org.uk/
.Ve
.PP
.Vb 1
\& $Id: xen-shell.man,v 1.1 2007-03-01 15:36:30 steve Exp $
.Ve
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (c) 2005\-2007 by Steve Kemp.  All rights reserved.
.PP
This module is free software;
you can redistribute it and/or modify it under
the same terms as Perl itself.
The \s-1LICENSE\s0 file contains the full text of the license.
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 3
\& Steve
\& \-\-
\& http://www.steve.org.uk/
.Ve
.PP
.Vb 1
\& $Id: xen-shell.man,v 1.1 2007-03-01 15:36:30 steve Exp $
.Ve
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (c) 2005\-2006 by Steve Kemp.  All rights reserved.
.PP
This module is free software;
you can redistribute it and/or modify it under
the same terms as Perl itself.
The \s-1LICENSE\s0 file contains the full text of the license.
