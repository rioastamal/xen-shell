#!/bin/sh
#
#  Invoke GNU screen with some sane options so that we can allow
# the user to run the xen-shell inside it, but disallow them from breaking
# out of it.
#
# Steve
# --
# $Id: xen-login-shell,v 1.5 2006-12-05 10:12:19 steve Exp $



#
#  Options we use:
#
# -d -R
#   Reattach a session and if necessary detach or even create it first.
#
# -c file
#   Override the default configuration file from "$HOME/.screenrc" to file
#
# -e^Aa
#   Explicitly set the escape sequence which GNU Screen should use.
#
# -s
#   set the login shell - this is the command which will run when the user
#  created a new window, or when the screen session starts/restarts.
#   
# -S
#   set the title of the screen session.
#


#
#  Firstly find the custom screen configuration file we're 
# wanting to use.
#
screenrc=
for i in /etc/xen-shell/_screenrc /usr/local/etc/_screenrc ; do

    # If we've not found the file already
    if [ -z "${screenrc}" ]; then

        # And the given file exists
        if [ -e $i ]; then

            # Record it
            screenrc=$i
        fi
    fi
done


#
#  Make sure we found a configuration file for GNU Screen
#
if [ -z "${screenrc}" ]; then
    echo "Could not find our custom GNU Screen configuration file"
    echo "Aborting"
    exit
fi


#
#  Now find the xen-shell
#
xs=
for i in /usr/bin/xen-shell /usr/local/bin/xen-shell ; do

    # If we've not found the shell already
    if [ -z "${xs}" ]; then

        # And the given potential shell exists
        if [ -x $i ]; then

            # Record it
            xs=$i
        fi
    fi
done

#
#  If we haven't found our shell then abort
#
if [ -z "${xs}" ]; then
    echo "Could not find the xen-shell in the directories we searched."
    echo "Aborting"
    exit
fi


#
#  Now that we know which shell and configuration file to execute
# start our xen-shell inside the new instance of GNU Screen.
#
screen -d -R -c ${screenrc} -e^Aa -s ${xs}  -S $USER


#
#  End of this script
#
exit



###
#
#  Everything from here down is POD documentation, as used in Perl.
# the reason this is here is so that we can generate a manpage easily.
#
####



=head1 NAME

xen-login-shell - A login shell to allow a user to control a Xen guest.

=cut


=head1 SYNOPSIS

  xen-login-shell

  This script accepts no command line arguments, or flags.

=cut


=head1 DESCRIPTION

  xen-login-shell is designed to be a simple wrapper around the xen-shell
 program.  This script should be set as the login-shell for any user who
 is supposed to control a single Xen instance which is named after their
 login name.

  The reason this script is set as the login shell is so that GNU Screen
 can be invoked to allow users to disconnect/reconnect to the real
 shell without fear of losing their connection.

=cut

=head1 INSTALLATION

  To set the login shell for a user run:

=for example start

   usermod -s /usr/bin/xen-login-shell $USERNAME

=for example end

  You will also need to ensure that the given username has a Xen instance
 named after their user account, and that sudo has been setup appropriately.

=cut


=head1 AUTHOR

 Steve
 --
 http://www.steve.org.uk/

 $Id: xen-login-shell,v 1.5 2006-12-05 10:12:19 steve Exp $

=cut


=head1 LICENSE

Copyright (c) 2005-2006 by Steve Kemp.  All rights reserved.

This module is free software;
you can redistribute it and/or modify it under
the same terms as Perl itself.
The LICENSE file contains the full text of the license.

=cut

